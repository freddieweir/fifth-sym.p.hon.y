name: üîç Dependency Security Scan

on:
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday

jobs:
  dependency-scan:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    # SARIF upload disabled for template repository
    # Uncomment when using in production repositories with proper permissions
    # - name: Upload Trivy scan results
    #   uses: github/codeql-action/upload-sarif@v3
    #   if: always()
    #   with:
    #     sarif_file: 'trivy-results.sarif'

    - name: Docker Compose security check
      run: |
        echo "üê≥ Checking Docker Compose security..."

        # Find all docker-compose files
        COMPOSE_FILES=$(find . -name "docker-compose*.yml" -o -name "docker-compose*.yaml")

        if [ ! -z "$COMPOSE_FILES" ]; then
          echo "Found Docker Compose files:"
          echo "$COMPOSE_FILES"

          # Check for security best practices
          echo "$COMPOSE_FILES" | while read -r file; do
            echo "Analyzing: $file"

            # Check for privileged containers
            if grep -q "privileged.*true" "$file"; then
              echo "‚ö†Ô∏è  Warning: Privileged container found in $file"
            fi

            # Check for host network mode
            if grep -q "network_mode.*host" "$file"; then
              echo "‚ö†Ô∏è  Warning: Host network mode in $file"
            fi

            # Check for volume mounts to sensitive paths
            if grep -qE ":/etc:|:/var/run/docker.sock" "$file"; then
              echo "‚ö†Ô∏è  Warning: Sensitive volume mount in $file"
            fi

            # Check for missing resource limits
            if ! grep -q "mem_limit\|cpus" "$file"; then
              echo "üí° Suggestion: Consider adding resource limits in $file"
            fi
          done
        else
          echo "No Docker Compose files found"
        fi